/*
 * lmk04826b.cpp
 *
 *  Created on: Jul 18, 2018
 *      Author: karthik
 */

#include "lmk04826b.h"
#include "stdint.h"


uint8_t lmk04826b_rom[] =
{
		0x00,0x00,0x80,
		0x00,0x00,0x00,
		0x00,0x02,0x00,
		0x01,0x00,0x14,
		0x01,0x01,0x55,
		0x01,0x03,0x00,
		0x01,0x04,0x02,
		0x01,0x05,0x00,
		0x01,0x06,0xF1,
		0x01,0x07,0x00, // set to 0 to disable DClkout0

		0x01,0x08,0x0A,
		0x01,0x09,0x55,
		0x01,0x0B,0x00,
		0x01,0x0C,0x02,
		0x01,0x0D,0x00,
		0x01,0x0E,0xF1, // ??? not 0x71?
		0x01,0x0F,0x06,


		0x01,0x10,0x14,
		0x01,0x11,0x55,
		0x01,0x13,0x00,
		0x01,0x14,0x02,
		0x01,0x15,0x00,
		0x01,0x16,0xF1,
		0x01,0x17,0x00, // set to 0 to disable DClkout4
		0x01,0x18,0x0A,
		0x01,0x19,0x55,
		0x01,0x1B,0x00,
		0x01,0x1C,0x02,
		0x01,0x1D,0x00,
		0x01,0x1E,0xF1,
		0x01,0x1F,0x05,
		0x01,0x20,0x14,
		0x01,0x21,0x55,
		0x01,0x23,0x00,
		0x01,0x24,0x02,
		0x01,0x25,0x00,
		0x01,0x26,0xF1,
		0x01,0x27,0x00, // set to 0 to disable DClkout8
		0x01,0x28,0x14,
		0x01,0x29,0x55,
		0x01,0x2B,0x00,
		0x01,0x2C,0x02,
		0x01,0x2D,0x00,
		0x01,0x2E,0xF1,
		0x01,0x2F,0x0E, // invert polarity of DCLKOUT10 to fix polarity swap in Graviton design
		0x01,0x30,0x14,
		0x01,0x31,0x55,
		0x01,0x33,0x00,
		0x01,0x34,0x02,
		0x01,0x35,0x00,
		0x01,0x36,0xF1,
		0x01,0x37,0x06,
		0x01,0x38,0x34,
		0x01,0x39,0x00,
		0x01,0x3A,0x0C,
		0x01,0x3B,0x00,
		0x01,0x3C,0x00,
		0x01,0x3D,0x08,
		0x01,0x3E,0x03,
		0x01,0x3F,0x03,
		0x01,0x40,0x0F,
		0x01,0x41,0x00,
		0x01,0x42,0x00,
		0x01,0x43,0x11, // enable sync and set sync mode to 1
		0x01,0x43,0x31, // sync_pol = 1
		0x01,0x43,0x11, // sync_pol = 0 causing sync
		//0x01,0x43,0x90,
		0x01,0x44,0x00,
		0x01,0x45,0x7F,
		0x01,0x46,0x1B, //0x1B,
		0x01,0x47,0x1A, // 0A CLKin0, 1A CLKin1, 2A CLKin2, 3A Pin Slect, 4A Auto Mode.  changed from 0x3A to 0x2A - select Clkin1 instead of clkin0 [2] = 0x4A means automatic
		0x01,0x48,0x02,
		0x01,0x49,0x42,
		0x01,0x4A,0x02,
		0x01,0x4B,0x16,
		0x01,0x4C,0x00,
		0x01,0x4D,0x00,
		0x01,0x4E,0xC0,
		0x01,0x4F,0x7F,
		0x01,0x50,0x01, // 0x01 enable holdover, with hard switching
		0x01,0x51,0x02,
		0x01,0x52,0x00,
		0x01,0x53,0x00,
		0x01,0x54,0x01,
		0x01,0x55,0x00,
		0x01,0x56,0x01,
		0x01,0x57,0x00,
		0x01,0x58,0x96,
		0x01,0x59,0x00,
		0x01,0x5A,0x0A,
		0x01,0x5B,0xD4,
		0x01,0x5C,0x20,
		0x01,0x5D,0x00,
		0x01,0x5E,0x00,
		0x01,0x5F,0x0B,
		0x01,0x60,0x00,
		0x01,0x61,0x08,
		0x01,0x62,0x30,
		0x01,0x63,0x00,
		0x01,0x64,0x00,
		0x01,0x65,0x19,
		0x01,0x7C,0x18,
		0x01,0x7D,0x77,
		0x01,0x66,0x00,
		0x01,0x67,0x00,
		0x01,0x68,0x19,
		0x01,0x69,0x59,
		0x01,0x6A,0x20,
		0x01,0x6B,0x00,
		0x01,0x6C,0x00,
		0x01,0x6D,0x00,
		0x01,0x6E,0x13,
		0x01,0x73,0x00,
		0x1F,0xFD,0x00,
		0x1F,0xFE,0x00,
		0x1F,0xFF,0x53
};

LMK04826B::LMK04826B(SPI *bus, PinName select, PinName rst_pin)
{
	spi = bus;
	cs = new DigitalOut(select,1);
	rst = new DigitalOut(rst_pin, 1);
}

extern Serial pc;

void LMK04826B::init()
{
	unsigned i;

	spi->format(8,0);

	wait_ms(1);

	rst->write(0);

	wait_ms(1);

	for( i = 0; i < sizeof(lmk04826b_rom) / 3; i++)
	{
		wait_us(10);

		cs->write(0);

		spi->write((const char*)(lmk04826b_rom + 3 * i), 3, 0, 0);

		wait_us(10);

		cs->write(1);
	}

	spi->format(8,1);
}

//void LMK04826B::powerdown()
//{
//	unsigned i;
//	uint8_t lmk04826b_pd[]=
//	{
//			0x01,0x2F,0x01
//			//0x00,0x00,0x01
//	};
//
//	spi->format(8,0);
//
//	wait_ms(1);
//
//	rst->write(0);
//
//	wait_ms(1);
//
//	for( i = 0; i < sizeof(lmk04826b_pd) /3; i++) {
//		wait_us(1);
//		cs->write(0);
//		spi->write((const char*)(lmk04826b_rom + 3 * i), 3, 0, 0);
//		wait_us(1);
//		cs->write(1);
//	}
//	spi->format(8,1);
//
//}
//


